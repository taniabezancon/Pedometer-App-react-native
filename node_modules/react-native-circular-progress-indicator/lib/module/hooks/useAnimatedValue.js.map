{"version":3,"names":["useCallback","useEffect","useMemo","Easing","interpolateColor","runOnJS","useAnimatedProps","useDerivedValue","useSharedValue","withDelay","withTiming","withPause","useCircleValues","useAnimatedValue","initialValue","radius","maxValue","clockwise","delay","value","duration","onAnimationComplete","activeStrokeWidth","inActiveStrokeWidth","progressFormatter","v","Math","round","strokeColorConfig","undefined","paused","animatedValue","circleCircumference","pause","play","resetAnimatedValue","animateValue","easing","linear","isFinished","reAnimate","sortedStrokeColors","sort","a","b","colors","map","item","color","values","animatedCircleProps","biggestValue","max","maxPercentage","config","strokeDashoffset","strokeColor","stroke","progressValue","animatedTextProps","text"],"sources":["useAnimatedValue.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport {\n  Easing,\n  interpolateColor,\n  runOnJS,\n  useAnimatedProps,\n  useDerivedValue,\n  useSharedValue,\n  withDelay,\n  withTiming,\n} from 'react-native-reanimated';\nimport { withPause } from 'react-native-redash';\n\nimport type { StrokeColorConfigType } from '../types';\n\nimport useCircleValues from './useCircleValues';\n\nexport interface UseAnimatedValueProps {\n  value: number;\n  initialValue?: number;\n  radius?: number;\n  duration?: number;\n  delay?: number;\n  maxValue?: number;\n  onAnimationComplete?: () => void;\n  activeStrokeWidth?: number;\n  inActiveStrokeWidth?: number;\n  clockwise?: boolean;\n  valueSuffix?: string;\n  valuePrefix?: string;\n  // eslint-disable-next-line no-unused-vars\n  progressFormatter?: (v: number) => number | string;\n  strokeColorConfig?: StrokeColorConfigType[];\n}\n\ntype Config = {\n  strokeDashoffset: number;\n  stroke?: string | number;\n};\n\nexport default function useAnimatedValue({\n  initialValue = 0,\n  radius = 60,\n  maxValue = 100,\n  clockwise,\n  delay = 0,\n  value,\n  duration,\n  onAnimationComplete = () => null,\n  activeStrokeWidth = 10,\n  inActiveStrokeWidth = 10,\n  progressFormatter = (v: number) => {\n    'worklet';\n\n    return Math.round(v);\n  },\n  strokeColorConfig = undefined,\n}: UseAnimatedValueProps) {\n  const paused = useSharedValue(<boolean>false);\n  const animatedValue = useSharedValue(initialValue);\n  const { circleCircumference } = useCircleValues({\n    radius,\n    activeStrokeWidth,\n    inActiveStrokeWidth,\n  // eslint-disable-next-line prettier/prettier\n  });\n\n  const pause = useCallback(() => {\n    paused.value = true;\n  }, [paused]);\n\n  const play = useCallback(() => {\n    paused.value = false;\n  }, [paused]);\n\n  const resetAnimatedValue = useCallback(() => {\n    paused.value = false;\n    animatedValue.value = initialValue;\n  }, [animatedValue, initialValue, paused]);\n\n  const animateValue = useCallback(() => {\n    animatedValue.value = withPause(\n      withDelay(\n        delay,\n        withTiming(value, { duration, easing: Easing.linear }, (isFinished) => {\n          if (isFinished) {\n            runOnJS(onAnimationComplete)?.();\n          }\n        })\n      ),\n      paused\n    );\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[animatedValue, delay, duration, paused, value]);\n\n  const reAnimate = () => {\n    resetAnimatedValue();\n    animateValue();\n  };\n\n  const sortedStrokeColors = useMemo(() => {\n    if (!strokeColorConfig) {\n      return null;\n    }\n    return strokeColorConfig.sort((a, b) => a.value - b.value);\n  }, [strokeColorConfig]);\n\n  const colors = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map((item) => item.color);\n  }, [sortedStrokeColors]);\n\n  const values = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map((item) => item.value);\n  }, [sortedStrokeColors]);\n\n  const animatedCircleProps = useAnimatedProps(() => {\n    let biggestValue: number = Math.max(initialValue, maxValue);\n    biggestValue = biggestValue <= 0 ? 1 : biggestValue;\n    const maxPercentage: number = clockwise\n      ? (100 * animatedValue.value) / biggestValue\n      : (100 * -animatedValue.value) / biggestValue;\n    const config: Config = {\n      strokeDashoffset:\n        circleCircumference - (circleCircumference * maxPercentage) / 100,\n    };\n    const strokeColor =\n      colors && values\n        ? interpolateColor(animatedValue.value, values, colors)\n        : undefined;\n    if (strokeColor) {\n      config.stroke = strokeColor;\n    }\n    return config;\n  });\n\n  useEffect(() => {\n    animateValue();\n  }, [animateValue]);\n\n  const progressValue = useDerivedValue(() => {\n    return `${progressFormatter(animatedValue.value)}`;\n  });\n\n  const animatedTextProps = useAnimatedProps(() => {\n    return {\n      text: progressValue.value,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;  \n  });\n\n  return {\n    animatedCircleProps,\n    animatedTextProps,\n    progressValue,\n    pause,\n    play,\n    reAnimate,\n  };\n}\n"],"mappings":"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"}