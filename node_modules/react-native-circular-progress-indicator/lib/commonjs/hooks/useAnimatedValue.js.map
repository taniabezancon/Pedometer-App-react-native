{"version":3,"names":["useAnimatedValue","initialValue","radius","maxValue","clockwise","delay","value","duration","onAnimationComplete","activeStrokeWidth","inActiveStrokeWidth","progressFormatter","v","Math","round","strokeColorConfig","undefined","paused","useSharedValue","animatedValue","circleCircumference","useCircleValues","pause","useCallback","play","resetAnimatedValue","animateValue","withPause","withDelay","withTiming","easing","Easing","linear","isFinished","runOnJS","reAnimate","sortedStrokeColors","useMemo","sort","a","b","colors","map","item","color","values","animatedCircleProps","useAnimatedProps","biggestValue","max","maxPercentage","config","strokeDashoffset","strokeColor","interpolateColor","stroke","useEffect","progressValue","useDerivedValue","animatedTextProps","text"],"sources":["useAnimatedValue.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport {\n  Easing,\n  interpolateColor,\n  runOnJS,\n  useAnimatedProps,\n  useDerivedValue,\n  useSharedValue,\n  withDelay,\n  withTiming,\n} from 'react-native-reanimated';\nimport { withPause } from 'react-native-redash';\n\nimport type { StrokeColorConfigType } from '../types';\n\nimport useCircleValues from './useCircleValues';\n\nexport interface UseAnimatedValueProps {\n  value: number;\n  initialValue?: number;\n  radius?: number;\n  duration?: number;\n  delay?: number;\n  maxValue?: number;\n  onAnimationComplete?: () => void;\n  activeStrokeWidth?: number;\n  inActiveStrokeWidth?: number;\n  clockwise?: boolean;\n  valueSuffix?: string;\n  valuePrefix?: string;\n  // eslint-disable-next-line no-unused-vars\n  progressFormatter?: (v: number) => number | string;\n  strokeColorConfig?: StrokeColorConfigType[];\n}\n\ntype Config = {\n  strokeDashoffset: number;\n  stroke?: string | number;\n};\n\nexport default function useAnimatedValue({\n  initialValue = 0,\n  radius = 60,\n  maxValue = 100,\n  clockwise,\n  delay = 0,\n  value,\n  duration,\n  onAnimationComplete = () => null,\n  activeStrokeWidth = 10,\n  inActiveStrokeWidth = 10,\n  progressFormatter = (v: number) => {\n    'worklet';\n\n    return Math.round(v);\n  },\n  strokeColorConfig = undefined,\n}: UseAnimatedValueProps) {\n  const paused = useSharedValue(<boolean>false);\n  const animatedValue = useSharedValue(initialValue);\n  const { circleCircumference } = useCircleValues({\n    radius,\n    activeStrokeWidth,\n    inActiveStrokeWidth,\n  // eslint-disable-next-line prettier/prettier\n  });\n\n  const pause = useCallback(() => {\n    paused.value = true;\n  }, [paused]);\n\n  const play = useCallback(() => {\n    paused.value = false;\n  }, [paused]);\n\n  const resetAnimatedValue = useCallback(() => {\n    paused.value = false;\n    animatedValue.value = initialValue;\n  }, [animatedValue, initialValue, paused]);\n\n  const animateValue = useCallback(() => {\n    animatedValue.value = withPause(\n      withDelay(\n        delay,\n        withTiming(value, { duration, easing: Easing.linear }, (isFinished) => {\n          if (isFinished) {\n            runOnJS(onAnimationComplete)?.();\n          }\n        })\n      ),\n      paused\n    );\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[animatedValue, delay, duration, paused, value]);\n\n  const reAnimate = () => {\n    resetAnimatedValue();\n    animateValue();\n  };\n\n  const sortedStrokeColors = useMemo(() => {\n    if (!strokeColorConfig) {\n      return null;\n    }\n    return strokeColorConfig.sort((a, b) => a.value - b.value);\n  }, [strokeColorConfig]);\n\n  const colors = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map((item) => item.color);\n  }, [sortedStrokeColors]);\n\n  const values = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map((item) => item.value);\n  }, [sortedStrokeColors]);\n\n  const animatedCircleProps = useAnimatedProps(() => {\n    let biggestValue: number = Math.max(initialValue, maxValue);\n    biggestValue = biggestValue <= 0 ? 1 : biggestValue;\n    const maxPercentage: number = clockwise\n      ? (100 * animatedValue.value) / biggestValue\n      : (100 * -animatedValue.value) / biggestValue;\n    const config: Config = {\n      strokeDashoffset:\n        circleCircumference - (circleCircumference * maxPercentage) / 100,\n    };\n    const strokeColor =\n      colors && values\n        ? interpolateColor(animatedValue.value, values, colors)\n        : undefined;\n    if (strokeColor) {\n      config.stroke = strokeColor;\n    }\n    return config;\n  });\n\n  useEffect(() => {\n    animateValue();\n  }, [animateValue]);\n\n  const progressValue = useDerivedValue(() => {\n    return `${progressFormatter(animatedValue.value)}`;\n  });\n\n  const animatedTextProps = useAnimatedProps(() => {\n    return {\n      text: progressValue.value,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;  \n  });\n\n  return {\n    animatedCircleProps,\n    animatedTextProps,\n    progressValue,\n    pause,\n    play,\n    reAnimate,\n  };\n}\n"],"mappings":"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"}